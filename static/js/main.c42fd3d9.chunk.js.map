{"version":3,"sources":["Context/AppContext.jsx","GlobalStyles/theme.js","Components/Mem/StyledMem.jsx","Components/Mem/Mem.jsx","Components/Routes/StyledRoute.jsx","Components/Routes/Hot.jsx","Components/Routes/Regular.jsx","Components/Routes/Star.jsx","Components/Routes/MemCreator.jsx","Components/Routes/PageNotFound.jsx","Context/AppState.jsx","GlobalStyles/GlobalStyle.jsx","Components/Navigation/StyledNavigation.jsx","Components/Navigation/Burger/StyledBurger.jsx","Components/Navigation/Burger/Burger.jsx","Components/Navigation/Navigation.jsx","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","theme","primaryDark","primaryLight","primary","secondary","primaryHover","mobile","memBgc","routeBgc","withStar","nonStar","StyledMem","styled","div","props","star","Mem","useContext","upVoteHandler","downVoteHandler","starHandler","title","upVote","downVote","imgSRC","id","src","alt","className","onClick","icon","faThumbsUp","rotation","faHeart","StyledRoute","StyledForm","form","Hot","topMemes","map","mem","name","Regular","regularMemes","Star","starMemes","MemCreator","setMemes","setForm","onSubmit","e","preventDefault","imgSrc","NewMem","uuid","prevState","alert","NewMemHandler","type","placeholder","value","onChange","target","PageNotFound","initialMemes","AppState","useState","memes","open","setOpen","filter","meme","Provider","children","GlobalStyle","createGlobalStyle","StyledNavigation","nav","StyledMenu","StyledBurger","button","Burger","openState","faBars","Navigation","to","activeClassName","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c42fd3d9.chunk.js","sourcesContent":["import {createContext} from \"react\";\r\n\r\nexport const AppContext = createContext();\r\n","export const theme = {\r\n    primaryDark: \"#0D0C1D\",\r\n    primaryLight: \"#EFFFFA\",\r\n    primary: \"orange\",\r\n    secondary: \"rgb(200,200,200)\",\r\n    primaryHover: \"#343078\",\r\n    mobile: \"576px\",\r\n    memBgc: \"#EFFFFA\",\r\n    routeBgc: \"rgb(120,120,120)\",\r\n    withStar: \"pink\",\r\n    nonStar: \"gray\",\r\n};\r\n","import {theme} from \"../../GlobalStyles/theme\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledMem = styled.div`\r\n    position: relative;\r\n    background: \"blue\";\r\n    color: ${theme.primaryDark};\r\n    width: 50vw;\r\n    margin: 0 auto 2rem auto;\r\n\r\n    @media (max-width: ${({theme}) => theme.mobile}) {\r\n        width: 75vw;\r\n        padding: 0;\r\n    }\r\n\r\n    h3 {\r\n        text-transform: uppercase;\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n\r\n    .buttons {\r\n        background-color: ${theme.primary};\r\n        height: 3rem;\r\n\r\n        * {\r\n            cursor: pointer;\r\n            background: transparent;\r\n            border: none;\r\n            font-size: 2rem;\r\n            line-height: 3rem;\r\n        }\r\n    }\r\n\r\n    .starButton {\r\n        color: ${(props) => (props.star ? theme.withStar : theme.nonStar)};\r\n        transition: 0.1s linear;\r\n    }\r\n`;\r\n","import {StyledMem} from \"./StyledMem\";\r\nimport React, {useContext} from \"react\";\r\nimport {AppContext} from \"../../Context/AppContext\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHeart, faThumbsUp} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const Mem = (props) => {\r\n    const {upVoteHandler, downVoteHandler, starHandler} =\r\n        useContext(AppContext);\r\n    const {title, upVote, downVote, imgSRC, id, star} = props;\r\n\r\n    return (\r\n        <StyledMem star={star}>\r\n            <h3>{title}</h3>\r\n            <img src={imgSRC} alt=\"mem\" />\r\n            <div className=\"buttons\">\r\n                <button onClick={() => upVoteHandler(id)}>\r\n                    {<FontAwesomeIcon icon={faThumbsUp} />} {upVote}\r\n                </button>\r\n                <button onClick={() => downVoteHandler(id)}>\r\n                    <FontAwesomeIcon icon={faThumbsUp} rotation={180} />{\" \"}\r\n                    {downVote}\r\n                </button>\r\n                <button\r\n                    className={\"starButton\"}\r\n                    onClick={() => starHandler(id)}\r\n                >\r\n                    {<FontAwesomeIcon icon={faHeart} />}\r\n                </button>\r\n            </div>\r\n        </StyledMem>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\nimport {theme} from \"../../GlobalStyles/theme\";\r\n\r\nexport const StyledRoute = styled.div`\r\n    padding: 2rem 0;\r\n    width: 100vw;\r\n    min-height: 100vh;\r\n    color: ${theme.primaryDark};\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${theme.primary};\r\n    width: 50%;\r\n    height: 50vh;\r\n\r\n    @media (max-width: ${({theme}) => theme.mobile}) {\r\n        width: 75%;\r\n    }\r\n\r\n    input {\r\n        display: block;\r\n        width: 50%;\r\n        margin: 1rem auto;\r\n        text-align: center;\r\n    }\r\n    button {\r\n        background-color: ${theme.primaryDark};\r\n        color: ${theme.primaryLight};\r\n        border: 1px solid black;\r\n        font-size: 1.5rem;\r\n        cursor: pointer;\r\n        transition: 0.2s linear;\r\n\r\n        &:hover {\r\n            color: ${theme.primaryDark};\r\n            background: ${theme.secondary};\r\n        }\r\n    }\r\n`;\r\n","import React, {useContext} from \"react\";\r\nimport {AppContext} from \"../../Context/AppContext\";\r\nimport {Mem} from \"../Mem/Mem\";\r\nimport { StyledRoute } from \"./StyledRoute\";\r\n\r\nexport const Hot = () => {\r\n    const {topMemes} = useContext(AppContext);\r\n\r\n    return (\r\n        <StyledRoute>\r\n            {topMemes.map((mem) => {\r\n                const {name, downVote, upVote, id, imgSRC, star} = mem;\r\n                return (\r\n                    <Mem\r\n                        title={name}\r\n                        upVote={upVote}\r\n                        downVote={downVote}\r\n                        id={id}\r\n                        key={id}\r\n                        imgSRC={imgSRC}\r\n                        star={star}\r\n                    />\r\n                );\r\n            })}\r\n        </StyledRoute>\r\n    );\r\n};\r\n","import React, {useContext} from \"react\";\r\nimport {AppContext} from \"../../Context/AppContext\";\r\nimport {Mem} from \"../Mem/Mem\";\r\nimport { StyledRoute } from \"./StyledRoute\";\r\n\r\nexport const Regular = () => {\r\n    const {regularMemes} = useContext(AppContext);\r\n\r\n    return (\r\n        <StyledRoute>\r\n            {regularMemes.map((mem) => {\r\n                const {name, downVote, upVote, id, imgSRC, star} = mem;\r\n                return (\r\n                    <Mem\r\n                        title={name}\r\n                        upVote={upVote}\r\n                        downVote={downVote}\r\n                        id={id}\r\n                        key={id}\r\n                        imgSRC={imgSRC}\r\n                        star={star}\r\n                    />\r\n                );\r\n            })}\r\n        </StyledRoute>\r\n    );\r\n};\r\n","import React, {useContext} from \"react\";\r\nimport {AppContext} from \"../../Context/AppContext\";\r\nimport {Mem} from \"../Mem/Mem\";\r\nimport { StyledRoute } from \"./StyledRoute\";\r\n\r\nexport const Star = () => {\r\n    const {starMemes} = useContext(AppContext);\r\n\r\n    return (\r\n        <StyledRoute>\r\n            {starMemes.map((mem) => {\r\n                const {name, downVote, upVote, id, imgSRC, star} = mem;\r\n                return (\r\n                    <Mem\r\n                        title={name}\r\n                        upVote={upVote}\r\n                        downVote={downVote}\r\n                        id={id}\r\n                        key={id}\r\n                        imgSRC={imgSRC}\r\n                        star={star}\r\n                    />\r\n                );\r\n            })}\r\n        </StyledRoute>\r\n    );\r\n};\r\n","import uuid from \"react-uuid\";\r\nimport React, {useContext} from \"react\";\r\nimport {AppContext} from \"../../Context/AppContext\";\r\nimport {StyledRoute, StyledForm} from \"./StyledRoute\";\r\n\r\nexport const MemCreator = () => {\r\n    const {setMemes, form, setForm} = useContext(AppContext);\r\n\r\n    const NewMemHandler = (name, imgSrc) => {\r\n        const NewMem = {\r\n            name: name,\r\n            upVote: 0,\r\n            downVote: 0,\r\n            id: uuid(),\r\n            imgSRC: imgSrc,\r\n            star: false,\r\n        };\r\n        setMemes((prevState) => [NewMem, ...prevState]);\r\n        alert(\"dodano nowy mem\");\r\n    };\r\n\r\n    const createMemHandler = (e) => {\r\n        e.preventDefault();\r\n        NewMemHandler(form.title, form.imgSRC);\r\n        setForm({title: \"\", imgSRC: \"\"});\r\n    };\r\n\r\n    return (\r\n        <StyledRoute>\r\n            <StyledForm onSubmit={createMemHandler}>\r\n                <h2>MEMCREATOR</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    id=\"title\"\r\n                    value={form.title}\r\n                    onChange={(e) => setForm({...form, title: e.target.value})}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"IMG SRC (enter URL)\"\r\n                    id=\"imgSrc\"\r\n                    value={form.imgSRC}\r\n                    onChange={(e) => setForm({...form, imgSRC: e.target.value})}\r\n                />\r\n                <button>add mem</button>\r\n            </StyledForm>\r\n        </StyledRoute>\r\n    );\r\n};\r\n","import { StyledRoute } from \"./StyledRoute\";\r\n\r\nexport const PageNotFound = () => {\r\n    return <StyledRoute><p>page not found</p></StyledRoute>;\r\n};\r\n","import {useState} from \"react\";\r\nimport {AppContext} from \"./AppContext\";\r\nimport uuid from \"react-uuid\";\r\n\r\nconst initialMemes = [\r\n    {\r\n        name: \"mem1\",\r\n        upVote: 0,\r\n        downVote: 0,\r\n        id: `${uuid()}`,\r\n        imgSRC: \"https://i1.kwejk.pl/k/obrazki/2021/05/t7OC4YmUU65nB9Rs.jpg\",\r\n        star: true,\r\n    },\r\n    {\r\n        name: \"mem2\",\r\n        upVote: 7,\r\n        downVote: 0,\r\n        id: \"B\",\r\n        imgSRC: \"https://i1.kwejk.pl/k/obrazki/2021/05/1qEHO1byIHfoThhb.jpg\",\r\n        star: false,\r\n    },\r\n    {\r\n        name: \"mem3\",\r\n        upVote: 0,\r\n        downVote: 0,\r\n        id: `${uuid()}`,\r\n        imgSRC: \"https://i1.kwejk.pl/k/obrazki/2021/05/tzgTaBd1Kvs6aMh7.jpg\",\r\n        star: true,\r\n    },\r\n    {\r\n        name: \"mem4\",\r\n        upVote: 0,\r\n        downVote: 0,\r\n        id: `${uuid()}`,\r\n        imgSRC: \"https://i1.kwejk.pl/k/obrazki/2021/05/8AQqXgqpZ6PVrzDi.jpg\",\r\n        star: true,\r\n    },\r\n];\r\n\r\nexport const AppState = (props) => {\r\n    // app states\r\n    const [memes, setMemes] = useState(initialMemes);\r\n\r\n    const [form, setForm] = useState({\r\n        title: \"\",\r\n        imgSRC: \"\",\r\n    });\r\n\r\n    const [open, setOpen] = useState(false);\r\n    // routes rules\r\n    const topMemes = memes.filter((meme) => {\r\n        return meme.upVote + meme.downVote > 5;\r\n    });\r\n\r\n    const regularMemes = memes.filter((meme) => {\r\n        return meme.upVote + meme.downVote <= 5;\r\n    });\r\n\r\n    const starMemes = memes.filter((meme) => {\r\n        return meme.star;\r\n    });\r\n\r\n    // voting handlers\r\n\r\n    const downVoteHandler = (id) => {\r\n        setMemes((prevState) => {\r\n            return prevState.map((mem) => {\r\n                if (mem.id === id) {\r\n                    switch (mem.downVote) {\r\n                        case 0:\r\n                            return {...mem, downVote: --mem.downVote};\r\n                        default:\r\n                            return {...mem, downVote: mem.downVote--};\r\n                    }\r\n                } else return mem;\r\n            });\r\n        });\r\n    };\r\n\r\n    const upVoteHandler = (id) => {\r\n        setMemes((prevState) => {\r\n            return prevState.map((mem) => {\r\n                if (mem.id === id) {\r\n                    switch (mem.upVote) {\r\n                        case 0:\r\n                            return {...mem, upVote: ++mem.upVote};\r\n                        default:\r\n                            return {...mem, upVote: mem.upVote++};\r\n                    }\r\n                } else return mem;\r\n            });\r\n        });\r\n    };\r\n\r\n    const starHandler = (id) => {\r\n        setMemes((prevState) => {\r\n            return prevState.map((mem) => {\r\n                return mem.id === id ? {...mem, star: !mem.star} : mem;\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                memes,\r\n                setMemes,\r\n                topMemes,\r\n                regularMemes,\r\n                starMemes,\r\n                open,\r\n                setOpen,\r\n                form,\r\n                setForm,\r\n                upVoteHandler,\r\n                downVoteHandler,\r\n                starHandler,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n","import {createGlobalStyle} from \"styled-components\";\r\n\r\n// global styles\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html, body {\r\n    overflow-x: hidden;\r\n    margin: 0;\r\n    padding: 0;\r\n    text-align:center;\r\n    background: ${({theme}) => theme.primaryLight};\r\n    color: ${({theme}) => theme.primaryLight};\r\n  }\r\n  *, *::after, *::before {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledNavigation = styled.nav`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background: ${({theme}) => theme.primary};\r\n    height: 100vh;\r\n    text-align: left;\r\n    padding: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transition: transform 0.3s ease-in-out;\r\n    transform: ${(props) =>\r\n        props.open ? \"translateX(0)\" : \"translateX(-100%)\"};\r\n\r\n    ul {\r\n        li {\r\n            list-style: none;\r\n            a {\r\n                font-size: 1.5rem;\r\n                text-transform: uppercase;\r\n                font-weight: bold;\r\n                letter-spacing: 0.5rem;\r\n                color: ${({theme}) => theme.primaryDark};\r\n                text-decoration: none;\r\n                transition: color 0.3s linear;\r\n\r\n                &:hover,\r\n                &.active {\r\n                    text-decoration: underline;\r\n                    color: ${({theme}) => theme.primaryLight};\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledMenu = styled.div`\r\n    position: fixed;\r\n    z-index: 10;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledBurger = styled.button`\r\n    position: relative;\r\n    top: 2rem;\r\n    left: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    background: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    z-index: 1;\r\n    border: none;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    font-size: 2rem;\r\n    color: ${(props) =>\r\n        props.open\r\n            ? ({theme}) => theme.primaryDark\r\n            : ({theme}) => theme.primary};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n`;\r\n","import React, {useContext} from \"react\";\r\n\r\nimport {AppContext} from \"../../../Context/AppContext\";\r\nimport {StyledBurger} from \"./StyledBurger\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBars} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const Burger = () => {\r\n    const {open, setOpen} = useContext(AppContext);\r\n\r\n    const openHandler = () => {\r\n        setOpen((openState) => !openState);\r\n    };\r\n\r\n    return (\r\n        <StyledBurger onClick={openHandler} open={open}>\r\n            {<FontAwesomeIcon icon={faBars} />}\r\n        </StyledBurger>\r\n    );\r\n};\r\n","import {StyledNavigation,StyledMenu} from \"./StyledNavigation\";\r\nimport {useContext} from \"react\";\r\nimport {AppContext} from \"../../Context/AppContext\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Burger} from \"./Burger/Burger\";\r\n\r\nexport const Navigation = () => {\r\n    const {open} = useContext(AppContext);\r\n\r\n    return (\r\n        <StyledMenu>\r\n            <Burger />\r\n            <StyledNavigation open={open}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/regular\" activeClassName=\"active\">\r\n                            Regular\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/hot\" activeClassName=\"active\">\r\n                            Hot\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/star\" activeClassName=\"active\">\r\n                            Star\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/memCreator\" activeClassName=\"active\">\r\n                            memCreator\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </StyledNavigation>\r\n        </StyledMenu>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n// Routes\r\nimport { Hot } from \"./Components/Routes/Hot\";\r\nimport { Regular } from \"./Components/Routes/Regular\";\r\nimport { Star } from \"./Components/Routes/Star\";\r\nimport { MemCreator } from \"./Components/Routes/MemCreator\";\r\nimport { PageNotFound } from \"./Components/Routes/PageNotFound\";\r\n// State\r\nimport { AppState } from \"./Context/AppState\";\r\n// Styles\r\nimport { GlobalStyle } from \"./GlobalStyles/GlobalStyle\";\r\nimport { Navigation } from \"./Components/Navigation/Navigation\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./GlobalStyles/theme\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppState>\r\n        <ThemeProvider theme={theme}>\r\n          <Router>\r\n            <Navigation />\r\n            <div>\r\n              <Switch>\r\n                <Route path=\"/regular\">\r\n                  <Regular />\r\n                </Route>\r\n                <Route path=\"/hot\">\r\n                  <Hot />\r\n                </Route>\r\n                <Route path=\"/star\">\r\n                  <Star />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                  <Redirect to=\"/regular\" />\r\n                </Route>\r\n                <Route path=\"/memCreator\">\r\n                  <MemCreator />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                  <PageNotFound />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n          <GlobalStyle />\r\n        </ThemeProvider>\r\n      </AppState>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}